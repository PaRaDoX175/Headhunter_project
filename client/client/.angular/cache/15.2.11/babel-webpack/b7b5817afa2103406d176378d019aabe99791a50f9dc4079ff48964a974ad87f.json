{"ast":null,"code":"import { ShopParams } from '../interfaces/shopParams';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./catalog.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../pager/pager.component\";\nimport * as i6 from \"../card/card.component\";\nfunction CatalogComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-card\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"vacancy\", item_r2);\n  }\n}\nfunction CatalogComponent_app_pager_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-pager\", 5);\n    i0.ɵɵlistener(\"pageChanged\", function CatalogComponent_app_pager_4_Template_app_pager_pageChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onPageChanged($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pageSize\", ctx_r1.shopParams.pageSize)(\"totalCount\", ctx_r1.totalCount);\n  }\n}\nexport class CatalogComponent {\n  constructor(catalogService, activatedRoute, dataService) {\n    this.catalogService = catalogService;\n    this.activatedRoute = activatedRoute;\n    this.dataService = dataService;\n    this.vacancies = [];\n    this.shopParams = new ShopParams();\n    this.totalCount = 0;\n    this.search = '';\n  }\n  ngOnInit() {\n    this.dataService.data$.subscribe({\n      next: data => this.vacancies = data\n    });\n    this.activatedRoute.queryParamMap.subscribe(params => {\n      const s = params.get('query');\n      console.log(s);\n      if (s !== null) this.getVacancies(s);else if (s === null) this.getVacancies();\n    });\n  }\n  getVacancies(search) {\n    if (search) {\n      this.shopParams.search = search;\n    }\n    this.catalogService.getVacancies(this.shopParams).subscribe({\n      next: response => {\n        this.vacancies = response.data;\n        this.shopParams.pageNumber = response.pageIndex;\n        this.shopParams.pageSize = response.pageSize;\n        this.totalCount = response.count;\n      }\n    });\n  }\n  onPageChanged(event) {\n    if (this.shopParams.pageNumber !== event) {\n      this.shopParams.pageNumber = event;\n      this.getVacancies();\n    }\n  }\n  static #_ = this.ɵfac = function CatalogComponent_Factory(t) {\n    return new (t || CatalogComponent)(i0.ɵɵdirectiveInject(i1.CatalogService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CatalogComponent,\n    selectors: [[\"app-catalog\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[2, \"position\", \"relative\"], [1, \"smth\", 2, \"display\", \"flex\", \"flex-wrap\", \"wrap\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pageSize\", \"totalCount\", \"pageChanged\", 4, \"ngIf\"], [3, \"vacancy\"], [3, \"pageSize\", \"totalCount\", \"pageChanged\"]],\n    template: function CatalogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"div\", 1);\n        i0.ɵɵtemplate(3, CatalogComponent_div_3_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, CatalogComponent_app_pager_4_Template, 1, 2, \"app-pager\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.vacancies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.totalCount > 6);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.PagerComponent, i6.CardComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,0BAA0B;;;;;;;;;;ICE/CC,2BAAoC;IAClCA,8BAAsC;IACxCA,iBAAM;;;;IADMA,eAAgB;IAAhBA,iCAAgB;;;;;;IAIhCA,oCAKC;IADCA;MAAAA;MAAA;MAAA,OAAeA,2CAAqB;IAAA,EAAC;IACtCA,iBAAY;;;;IAHXA,qDAAgC;;;ADEpC,OAAM,MAAOC,gBAAgB;EAM3BC,YACUC,cAA8B,EAC9BC,cAA8B,EAC9BC,WAAwB;IAFxB,mBAAc,GAAdF,cAAc;IACd,mBAAc,GAAdC,cAAc;IACd,gBAAW,GAAXC,WAAW;IARrB,cAAS,GAAe,EAAE;IAC1B,eAAU,GAAG,IAAIN,UAAU,EAAE;IAC7B,eAAU,GAAG,CAAC;IACd,WAAM,GAAkB,EAAE;EAMvB;EAEHO,QAAQ;IACN,IAAI,CAACD,WAAW,CAACE,KAAK,CAACC,SAAS,CAAC;MAC/BC,IAAI,EAAGC,IAAI,IAAM,IAAI,CAACC,SAAS,GAAGD;KACnC,CAAC;IAEF,IAAI,CAACN,cAAc,CAACQ,aAAa,CAACJ,SAAS,CAAEK,MAAM,IAAI;MACrD,MAAMC,CAAC,GAAGD,MAAM,CAACE,GAAG,CAAC,OAAO,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;MACd,IAAIA,CAAC,KAAK,IAAI,EAAE,IAAI,CAACI,YAAY,CAACJ,CAAC,CAAC,CAAC,KAChC,IAAIA,CAAC,KAAK,IAAI,EAAE,IAAI,CAACI,YAAY,EAAE;IAC1C,CAAC,CAAC;EACJ;EAEAA,YAAY,CAACC,MAAe;IAC1B,IAAIA,MAAM,EAAE;MACV,IAAI,CAACC,UAAU,CAACD,MAAM,GAAGA,MAAM;;IAEjC,IAAI,CAAChB,cAAc,CAACe,YAAY,CAAC,IAAI,CAACE,UAAU,CAAC,CAACZ,SAAS,CAAC;MAC1DC,IAAI,EAAGY,QAAQ,IAAI;QACjB,IAAI,CAACV,SAAS,GAAGU,QAAQ,CAACX,IAAI;QAC9B,IAAI,CAACU,UAAU,CAACE,UAAU,GAAGD,QAAQ,CAACE,SAAS;QAC/C,IAAI,CAACH,UAAU,CAACI,QAAQ,GAAGH,QAAQ,CAACG,QAAQ;QAC5C,IAAI,CAACC,UAAU,GAAGJ,QAAQ,CAACK,KAAK;MAClC;KACD,CAAC;EACJ;EAEAC,aAAa,CAACC,KAAU;IACtB,IAAI,IAAI,CAACR,UAAU,CAACE,UAAU,KAAKM,KAAK,EAAE;MACxC,IAAI,CAACR,UAAU,CAACE,UAAU,GAAGM,KAAK;MAClC,IAAI,CAACV,YAAY,EAAE;;EAEvB;EAAC;qBA5CUjB,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAA4B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZ7BjC,8BAAgC;QAG1BA,iEAEM;QACRA,iBAAM;QAERA,6EAKa;QACfA,iBAAM;;;QAXsBA,eAAY;QAAZA,uCAAY;QAMnCA,eAAoB;QAApBA,yCAAoB","names":["ShopParams","i0","CatalogComponent","constructor","catalogService","activatedRoute","dataService","ngOnInit","data$","subscribe","next","data","vacancies","queryParamMap","params","s","get","console","log","getVacancies","search","shopParams","response","pageNumber","pageIndex","pageSize","totalCount","count","onPageChanged","event","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Ruslan\\headhunter\\client\\client\\src\\app\\catalog\\catalog.component.ts","C:\\Ruslan\\headhunter\\client\\client\\src\\app\\catalog\\catalog.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ShopParams } from '../interfaces/shopParams';\nimport { CatalogService } from './catalog.service';\nimport { IVacancy } from '../interfaces/vacancy';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-catalog',\n  templateUrl: './catalog.component.html',\n  styleUrls: ['./catalog.component.scss'],\n})\nexport class CatalogComponent implements OnInit {\n  vacancies: IVacancy[] = [];\n  shopParams = new ShopParams();\n  totalCount = 0;\n  search: string | null = '';\n\n  constructor(\n    private catalogService: CatalogService,\n    private activatedRoute: ActivatedRoute,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {\n    this.dataService.data$.subscribe({\n      next: (data) => (this.vacancies = data),\n    });\n\n    this.activatedRoute.queryParamMap.subscribe((params) => {\n      const s = params.get('query');\n      console.log(s);\n      if (s !== null) this.getVacancies(s);\n      else if (s === null) this.getVacancies();\n    });\n  }\n\n  getVacancies(search?: string) {\n    if (search) {\n      this.shopParams.search = search;\n    }\n    this.catalogService.getVacancies(this.shopParams).subscribe({\n      next: (response) => {\n        this.vacancies = response.data;\n        this.shopParams.pageNumber = response.pageIndex;\n        this.shopParams.pageSize = response.pageSize;\n        this.totalCount = response.count;\n      },\n    });\n  }\n\n  onPageChanged(event: any) {\n    if (this.shopParams.pageNumber !== event) {\n      this.shopParams.pageNumber = event;\n      this.getVacancies();\n    }\n  }\n}\n","<div style=\"position: relative\">\n  <div>\n    <div class=\"smth\" style=\"display: flex; flex-wrap: wrap\">\n      <div *ngFor=\"let item of vacancies\">\n        <app-card [vacancy]=\"item\"></app-card>\n      </div>\n    </div>\n  </div>\n  <app-pager\n    *ngIf=\"totalCount > 6\"\n    [pageSize]=\"shopParams.pageSize\"\n    [totalCount]=\"totalCount\"\n    (pageChanged)=\"onPageChanged($event)\"\n  ></app-pager>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}