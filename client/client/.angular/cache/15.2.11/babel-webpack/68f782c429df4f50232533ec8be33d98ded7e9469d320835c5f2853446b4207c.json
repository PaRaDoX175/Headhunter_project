{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {\n    this.dataSubject = new BehaviorSubject(null);\n    this.data$ = this.dataSubject.asObservable();\n  }\n  updateData(data) {\n    this.dataSubject.next(data);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,WAAW;EAHxBC;IAIU,gBAAW,GAAG,IAAIF,eAAe,CAAM,IAAI,CAAC;IACpD,UAAK,GAAoB,IAAI,CAACG,WAAW,CAACC,YAAY,EAAE;;EAExDC,UAAU,CAACC,IAAgB;IACzB,IAAI,CAACH,WAAW,CAACI,IAAI,CAACD,IAAI,CAAC;EAC7B;EAAC;qBANUL,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAO,SAAXP,WAAW;IAAAQ,YAFV;EAAM","names":["BehaviorSubject","DataService","constructor","dataSubject","asObservable","updateData","data","next","factory","providedIn"],"sourceRoot":"","sources":["C:\\Ruslan\\headhunter\\client\\client\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { IVacancy } from '../interfaces/vacancy';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  private dataSubject = new BehaviorSubject<any>(null);\n  data$: Observable<any> = this.dataSubject.asObservable();\n\n  updateData(data: IVacancy[]) {\n    this.dataSubject.next(data);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}