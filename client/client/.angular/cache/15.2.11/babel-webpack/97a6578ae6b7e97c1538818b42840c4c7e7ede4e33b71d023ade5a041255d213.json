{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(registerService, router) {\n    this.registerService = registerService;\n    this.router = router;\n    this.profileForm = new FormGroup({\n      displayName: new FormControl('', Validators.required),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      phoneNumber: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.email, Validators.required])\n    });\n    this.resumeForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      aboutMe: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      phoneNumber: new FormControl('', Validators.required),\n      profession: new FormControl('', Validators.required),\n      skills: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    this.registerService.sendData(this.profileForm.value, this.resumeForm.value).subscribe({\n      next: data => {\n        if (data.token) {\n          localStorage.setItem('TOKEN', data.token);\n          localStorage.setItem('DisplayName', data.displayName);\n          this.router.navigateByUrl('').then(() => {\n            window.location.reload();\n          });\n        }\n      },\n      error: data => console.log(data)\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAS5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YACUC,eAAgC,EAChCC,MAAc;IADd,oBAAe,GAAfD,eAAe;IACf,WAAM,GAANC,MAAM;IAGhB,gBAAW,GAAc,IAAIL,SAAS,CAAC;MACrCM,WAAW,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MACrDC,SAAS,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MACnDE,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MAClDG,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MAClDI,WAAW,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MACrDK,KAAK,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACW,KAAK,EAAEX,UAAU,CAACM,QAAQ,CAAC;KACnE,CAAC;IAEF,eAAU,GAAc,IAAIP,SAAS,CAAC;MACpCa,IAAI,EAAE,IAAId,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MAC9CO,OAAO,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MACjDK,KAAK,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACW,KAAK,EAAEX,UAAU,CAACM,QAAQ,CAAC,CAAC;MACnEI,WAAW,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MACrDQ,UAAU,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MACpDS,MAAM,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ;KAChD,CAAC;EAlBC;EAoBHU,QAAQ;IACN,IAAI,CAACb,eAAe,CACjBc,QAAQ,CAAC,IAAI,CAACC,WAAW,CAACC,KAAK,EAAE,IAAI,CAACC,UAAU,CAACD,KAAK,CAAC,CACvDE,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAIA,IAAI,CAACC,KAAK,EAAE;UACdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC;UACzCC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,IAAI,CAAClB,WAAW,CAAC;UACrD,IAAI,CAACD,MAAM,CAACuB,aAAa,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,MAAK;YACtCC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;UAC1B,CAAC,CAAC;;MAEN,CAAC;MACDC,KAAK,EAAGT,IAAI,IAAKU,OAAO,CAACC,GAAG,CAACX,IAAI;KAClC,CAAC;EACN;CACD;AAxCYtB,iBAAiB,eAL7BJ,SAAS,CAAC;EACTsC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWpC,iBAAiB,CAwC7B;SAxCYA,iBAAiB","names":["Component","FormControl","FormGroup","Validators","RegisterComponent","constructor","registerService","router","displayName","required","firstName","lastName","password","phoneNumber","email","name","aboutMe","profession","skills","onSubmit","sendData","profileForm","value","resumeForm","subscribe","next","data","token","localStorage","setItem","navigateByUrl","then","window","location","reload","error","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Ruslan\\headhunter\\client\\client\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RegisterService } from './register.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n  constructor(\n    private registerService: RegisterService,\n    private router: Router\n  ) {}\n\n  profileForm: FormGroup = new FormGroup({\n    displayName: new FormControl('', Validators.required),\n    firstName: new FormControl('', Validators.required),\n    lastName: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n    phoneNumber: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.email, Validators.required]),\n  });\n\n  resumeForm: FormGroup = new FormGroup({\n    name: new FormControl('', Validators.required),\n    aboutMe: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    phoneNumber: new FormControl('', Validators.required),\n    profession: new FormControl('', Validators.required),\n    skills: new FormControl('', Validators.required),\n  });\n\n  onSubmit() {\n    this.registerService\n      .sendData(this.profileForm.value, this.resumeForm.value)\n      .subscribe({\n        next: (data) => {\n          if (data.token) {\n            localStorage.setItem('TOKEN', data.token);\n            localStorage.setItem('DisplayName', data.displayName);\n            this.router.navigateByUrl('').then(() => {\n              window.location.reload();\n            });\n          }\n        },\n        error: (data) => console.log(data),\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}