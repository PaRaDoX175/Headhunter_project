{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ngx-bootstrap/pagination\";\nfunction PagerComponent_pagination_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"pagination\", 1);\n    i0.ɵɵlistener(\"pageChanged\", function PagerComponent_pagination_0_Template_pagination_pageChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPagerChanged($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"boundaryLinks\", true)(\"itemsPerPage\", ctx_r0.pageSize)(\"maxSize\", 10);\n  }\n}\nexport class PagerComponent {\n  constructor() {\n    this.pageChanged = new EventEmitter();\n  }\n  onPagerChanged(event) {\n    this.pageChanged.emit(event.page);\n  }\n  static #_ = this.ɵfac = function PagerComponent_Factory(t) {\n    return new (t || PagerComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PagerComponent,\n    selectors: [[\"app-pager\"]],\n    inputs: {\n      totalCount: \"totalCount\",\n      pageSize: \"pageSize\"\n    },\n    outputs: {\n      pageChanged: \"pageChanged\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"d-flex justify-content-center\", \"previousText\", \"\\u2039\", \"nextText\", \"\\u203A\", \"firstText\", \"\\u00AB\", \"lastText\", \"\\u00BB\", 3, \"boundaryLinks\", \"itemsPerPage\", \"maxSize\", \"pageChanged\", 4, \"ngIf\"], [\"previousText\", \"\\u2039\", \"nextText\", \"\\u203A\", \"firstText\", \"\\u00AB\", \"lastText\", \"\\u00BB\", 1, \"d-flex\", \"justify-content-center\", 3, \"boundaryLinks\", \"itemsPerPage\", \"maxSize\", \"pageChanged\"]],\n    template: function PagerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PagerComponent_pagination_0_Template, 1, 3, \"pagination\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.pageSize);\n      }\n    },\n    dependencies: [i1.NgIf, i2.PaginationComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;;;;ICAtEC,qCAWC;IALCA;MAAAA;MAAA;MAAA,OAAeA,4CAAsB;IAAA,EAAC;IAMxCA,iBAAa;;;;IATXA,oCAAsB;;;ADIxB,OAAM,MAAOC,cAAc;EAL3BC;IAQY,gBAAW,GAAG,IAAIH,YAAY,EAAU;;EAElDI,cAAc,CAACC,KAAU;IACvB,IAAI,CAACC,WAAW,CAACC,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC;EACnC;EAAC;qBAPUN,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAO;IAAAC;MAAAC;MAAAC;IAAA;IAAAC;MAAAP;IAAA;IAAAQ;IAAAC;IAAAC;IAAAC;MAAA;QCP3BhB,6EAYa;;;QAVVA,mCAAc","names":["EventEmitter","i0","PagerComponent","constructor","onPagerChanged","event","pageChanged","emit","page","selectors","inputs","totalCount","pageSize","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Ruslan\\headhunter\\client\\client\\src\\app\\pager\\pager.component.ts","C:\\Ruslan\\headhunter\\client\\client\\src\\app\\pager\\pager.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-pager',\n  templateUrl: './pager.component.html',\n  styleUrls: ['./pager.component.scss'],\n})\nexport class PagerComponent {\n  @Input() totalCount?: number;\n  @Input() pageSize?: number;\n  @Output() pageChanged = new EventEmitter<number>();\n\n  onPagerChanged(event: any) {\n    this.pageChanged.emit(event.page);\n  }\n}\n","<pagination\n  class=\"d-flex justify-content-center\"\n  *ngIf=\"pageSize\"\n  [boundaryLinks]=\"true\"\n  [itemsPerPage]=\"pageSize\"\n  [maxSize]=\"10\"\n  (pageChanged)=\"onPagerChanged($event)\"\n  previousText=\"&lsaquo;\"\n  nextText=\"&rsaquo;\"\n  firstText=\"&laquo;\"\n  lastText=\"&raquo;\"\n>\n</pagination>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}