{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CatalogService {\n  constructor(client) {\n    this.client = client;\n    this.url = 'http://localhost:5045/api/company/vacancy';\n  }\n  getVacancies(shopParams) {\n    let params = new HttpParams();\n    params = params.append('pageIndex', shopParams.pageNumber);\n    params = params.append('pageSize', shopParams.pageSize);\n    console.log(`shParams: ${shopParams.search}`);\n    if (shopParams.search) {\n      params = params.append('search', shopParams.search);\n    } else {\n      params = params.delete('search');\n      console.log(params);\n    }\n    console.log(`params: ${params}`);\n    return this.client.get(this.url, {\n      params\n    });\n  }\n  static #_ = this.ɵfac = function CatalogService_Factory(t) {\n    return new (t || CatalogService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CatalogService,\n    factory: CatalogService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAS7D,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,MAAkB;IAAlB,WAAM,GAANA,MAAM;IAE1B,QAAG,GAAG,2CAA2C;EAFR;EAIzCC,YAAY,CAACC,UAAsB;IACjC,IAAIC,MAAM,GAAG,IAAIN,UAAU,EAAE;IAE7BM,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,WAAW,EAAEF,UAAU,CAACG,UAAU,CAAC;IAC1DF,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEF,UAAU,CAACI,QAAQ,CAAC;IACvDC,OAAO,CAACC,GAAG,CAAC,aAAaN,UAAU,CAACO,MAAM,EAAE,CAAC;IAE7C,IAAIP,UAAU,CAACO,MAAM,EAAE;MACrBN,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,QAAQ,EAAEF,UAAU,CAACO,MAAM,CAAC;KACpD,MAAM;MACLN,MAAM,GAAGA,MAAM,CAACO,MAAM,CAAC,QAAQ,CAAC;MAChCH,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;;IAGrBI,OAAO,CAACC,GAAG,CAAC,WAAWL,MAAM,EAAE,CAAC;IAEhC,OAAO,IAAI,CAACH,MAAM,CAACW,GAAG,CAA0B,IAAI,CAACC,GAAG,EAAE;MAAET;IAAM,CAAE,CAAC;EACvE;EAAC;qBAtBUL,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAe,SAAdf,cAAc;IAAAgB,YAFb;EAAM","names":["HttpParams","CatalogService","constructor","client","getVacancies","shopParams","params","append","pageNumber","pageSize","console","log","search","delete","get","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\Ruslan\\headhunter\\client\\client\\src\\app\\catalog\\catalog.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ShopParams } from '../interfaces/shopParams';\nimport { IPagination } from '../interfaces/pagination';\nimport { IVacancy } from '../interfaces/vacancy';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CatalogService {\n  constructor(private client: HttpClient) {}\n\n  url = 'http://localhost:5045/api/company/vacancy';\n\n  getVacancies(shopParams: ShopParams) {\n    let params = new HttpParams();\n\n    params = params.append('pageIndex', shopParams.pageNumber);\n    params = params.append('pageSize', shopParams.pageSize);\n    console.log(`shParams: ${shopParams.search}`);\n\n    if (shopParams.search) {\n      params = params.append('search', shopParams.search);\n    } else {\n      params = params.delete('search');\n      console.log(params);\n    }\n\n    console.log(`params: ${params}`);\n\n    return this.client.get<IPagination<IVacancy[]>>(this.url, { params });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}